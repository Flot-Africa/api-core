#####################################################################
# CONFIGURATION COMMUNE
#####################################################################

# Base Configuration
quarkus.http.root-path=/api
quarkus.resteasy-reactive.path=/v1
quarkus.default-locale=fr-FR
quarkus.datasource.jdbc=false
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.always-include=true

# Base Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.packages=africa.flot.domain.model
quarkus.hibernate-orm.exclude-unlisted-classes=true

# Configuration du pool de connexions
quarkus.datasource.reactive.max-size=20
quarkus.datasource.reactive.idle-timeout=300
quarkus.hibernate-orm.database.generation=none
quarkus.scheduler.start-mode=forced

##################################
# Logging commun
##################################

# Configuration générale des logs
# Configuration générale des logs
quarkus.log.level=INFO
quarkus.log.category."africa.flot".level=DEBUG

# Configuration du canal par défaut (console)
quarkus.log.console.enable=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.console.level=INFO

# Configuration du fichier de log principal avec rotation quotidienne

quarkus.log.file.enable=true
quarkus.log.file.path=storage/logs/flot/app.log
quarkus.log.file.level=DEBUG
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd
quarkus.log.file.rotation.max-backup-index=30

# Configuration du canal pour les logs métier
quarkus.log.category."BUSINESS".handlers=BUSINESS_FILE
quarkus.log.handler.file."BUSINESS_FILE".enable=true
quarkus.log.handler.file."BUSINESS_FILE".path=./storage/logs/flot/business.log
quarkus.log.handler.file."BUSINESS_FILE".format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.handler.file."BUSINESS_FILE".level=INFO
quarkus.log.handler.file."BUSINESS_FILE".rotation.file-suffix=.yyyy-MM-dd
quarkus.log.handler.file."BUSINESS_FILE".rotation.max-backup-index=30

# Configuration du canal pour les logs d'audit
quarkus.log.category."AUDIT".handlers=AUDIT_FILE
quarkus.log.handler.file."AUDIT_FILE".enable=true
quarkus.log.handler.file."AUDIT_FILE".path=./storage/logs/flot/audit.log
quarkus.log.handler.file."AUDIT_FILE".format=%d{yyyy-MM-dd HH:mm:ss,SSS} [%t] %s%e%n
quarkus.log.handler.file."AUDIT_FILE".level=INFO
quarkus.log.handler.file."AUDIT_FILE".rotation.file-suffix=.yyyy-MM-dd
quarkus.log.handler.file."AUDIT_FILE".rotation.max-backup-index=30

# Configuration du canal pour les erreurs
quarkus.log.category."ERROR".handlers=ERROR_FILE
quarkus.log.handler.file."ERROR_FILE".enable=true
quarkus.log.handler.file."ERROR_FILE".path=./storage/logs/flot/error.log
quarkus.log.handler.file."ERROR_FILE".format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.handler.file."ERROR_FILE".level=ERROR
quarkus.log.handler.file."ERROR_FILE".rotation.file-suffix=.yyyy-MM-dd
quarkus.log.handler.file."ERROR_FILE".rotation.max-backup-index=30

# Danaya logging
quarkus.log.handler.file."DANAYA_FILE".enable=true
quarkus.log.handler.file."DANAYA_FILE".path=./storage/logs/flot/danaya.log
quarkus.log.handler.file."DANAYA_FILE".format=[%d{yyyy-MM-dd HH:mm:ss.SSS}] %p: %m%n
quarkus.log.category."africa.flot.infrastructure.dayana".handlers=DANAYA_FILE

# Metrics Configuration
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics
quarkus.micrometer.export.prometheus.port=9100
quarkus.micrometer.binder.http-client.enabled=true
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true
quarkus.micrometer.registry-enabled=true

# CORS Configuration
quarkus.http.cors=true
quarkus.http.cors.origins=/.*/
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=*
quarkus.http.cors.allow-credentials=true

# JWT Configuration
mp.jwt.verify.issuer=${JWT_ISSUER}
mp.jwt.verify.publickey.location=jwt/publicKey.pem
smallrye.jwt.sign.key.location=jwt/privateKey.pem

# Auth Admin Key
auth.admin.key=${AUTH_ADMIN_KEY:admin}

# Container and Native Image Configuration
quarkus.container-image.builder=docker
quarkus.container-image.registry=docker.io
quarkus.container-image.group=flot701
quarkus.container-image.name=flot-api
quarkus.container-image.tag=${VERSION:latest}
quarkus.container-image.build=true
quarkus.container-image.push=true

# Native Configuration
quarkus.native.container-build=true
quarkus.native.additional-build-args=\
    -march=x86-64,\
    --initialize-at-run-time=io.netty.channel.unix.Socket,\
    --initialize-at-run-time=io.netty.channel.unix.IovArray,\
    --initialize-at-run-time=io.netty.channel.epoll.EpollEventArray,\
    --initialize-at-run-time=io.netty.channel.epoll.Native,\
    -H:+StaticExecutableWithDynamicLibC

#####################################################################
# CONFIGURATION DEV
#####################################################################
%dev.quarkus.log.level=DEBUG
%dev.quarkus.log.category."io.quarkus.hibernate.reactive".level=WARN
%dev.quarkus.log.category."org.hibernate.SQL".level=WARN
%dev.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=WARN
%dev.quarkus.log.category."io.micrometer".level=DEBUG


# Base de données (dev)
%dev.quarkus.datasource.reactive.url=vertx-reactive:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
%dev.quarkus.datasource.username=${DB_USER}
%dev.quarkus.datasource.password=${DB_PASSWORD}
%dev.quarkus.hibernate-orm.packages=africa.flot.domain.model
%dev.quarkus.hibernate-orm.database.generation=update
%dev.quarkus.hibernate-orm.log.sql=false
%dev.quarkus.hibernate-orm.log.bind-parameters=true
%dev.quarkus.hibernate-orm.statistics=true


# Redis (dev)
%dev.quarkus.redis.hosts=${REDIS_HOST}
%dev.quarkus.redis.database=1

# MinIO (dev)
%dev.quarkus.minio.url=${MINIO_URL}
%dev.quarkus.minio.access-key=${MINIO_ACCESS_KEY}
%dev.quarkus.minio.secret-key=${MINIO_SECRET_KEY}
%dev.quarkus.minio.bucket-name=${MINIO_BUCKET_NAME}

# Danaya Client (dev)
%dev.quarkus.rest-client.danaya-api.url=${DANAYA_API_URL}
%dev.quarkus.rest-client.danaya-api.api-key=${DANAYA_API_KEY}
%dev.quarkus.rest-client.danaya-api.api-secret=${DANAYA_API_SECRET}
%dev.quarkus.rest-client.danaya-api.scope=jakarta.inject.Singleton
%dev.quarkus.rest-client.danaya-api.initial-delay-seconds=3
%dev.quarkus.rest-client.danaya-api.polling-interval-seconds=5
%dev.quarkus.rest-client.danaya-api.max-polling-attempts=60
%dev.quarkus.rest-client.danaya-api.providers=africa.flot.infrastructure.danaya.DanayaClient


# Jetfy SMS (dev)
%dev.quarkus.jetfy.api.token=${JETFY_API_TOKEN}
%dev.quarkus.jetfy.api.sender-id=${JETFY_API_SENDER_ID}
%dev.quarkus.rest-client.jetfy-api.url=${JETFY_API_URL:https://api.jetfy.net}
%dev.quarkus.rest-client.jetfy-api.scope=jakarta.enterprise.context.ApplicationScoped

# Fineract (dev)
%dev.quarkus.fineract.api.url=${FINERACT_API_URL}
%dev.quarkus.fineract.api.username=${FINERACT_API_USERNAME}
%dev.quarkus.fineract.api.password=${FINERACT_API_PASSWORD}

# Fineract API Rest-Client (prod)
%dev.quarkus.rest-client.fineract-api.url=${FINERACT_API_URL}
%dev.quarkus.rest-client.fineract-api.username=${FINERACT_API_USERNAME}
%dev.quarkus.rest-client.fineract-api.password=${FINERACT_API_PASSWORD}
%dev.quarkus.rest-client.fineract-api.connect-timeout=30000
%dev.quarkus.rest-client.fineract-api.read-timeout=30000
%dev.quarkus.rest-client.fineract-api.max-retries=3
%dev.quarkus.rest-client.fineract-api.retry-interval=1000

# Africa Mobile API (prod)
%dev.quarkus.rest-client.africa-mobile-api.url=${AFRICA_MOBILE_API_URL}
%dev.quarkus.africa.mobile.accountid=${AFRICA_MOBILE_ACCOUNTID}
%dev.quarkus.africa.mobile.password=${AFRICA_MOBILE_PASSWORD}
%dev.quarkus.africa.mobile.sender=${AFRICA_MOBILE_SENDER}

#####################################################################
# CONFIGURATION PROD
#####################################################################
%prod.quarkus.http.port=${PORT:8080}

%prod.quarkus.log.level=INFO
%prod.quarkus.log.category."io.quarkus.hibernate.reactive".level=DEBUG
%prod.quarkus.log.category."org.hibernate.SQL".level=DEBUG
%prod.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=TRACE
%prod.quarkus.log.category."io.micrometer".level=DEBUG
%prod.quarkus.log.category."org.hibernate".level=WARN

# Redis (prod)
%prod.quarkus.redis.hosts=${REDIS_HOST}
%prod.quarkus.redis.database=0

# Base de données (prod)
%prod.quarkus.datasource.reactive.url=vertx-reactive:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
%prod.quarkus.datasource.username=${DB_USER}
%prod.quarkus.datasource.password=${DB_PASSWORD}
%prod.quarkus.hibernate-orm.packages=africa.flot.domain.model
%prod.quarkus.hibernate-orm.database.generation=update
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.hibernate-orm.log.bind-parameters=true
%prod.quarkus.hibernate-orm.statistics=true

# MinIO (prod)
%prod.quarkus.minio.url=${MINIO_URL}
%prod.quarkus.minio.access-key=${MINIO_ACCESS_KEY}
%prod.quarkus.minio.secret-key=${MINIO_SECRET_KEY}
%prod.quarkus.minio.bucket-name=${MINIO_BUCKET_NAME}

# Danaya Client (prod)
%prod.quarkus.rest-client.danaya-api.url=${DANAYA_API_URL}
%prod.quarkus.rest-client.danaya-api.api-key=${DANAYA_API_KEY}
%prod.quarkus.rest-client.danaya-api.api-secret=${DANAYA_API_SECRET}
%prod.quarkus.rest-client.danaya-api.scope=jakarta.inject.Singleton
%prod.quarkus.rest-client.danaya-api.initial-delay-seconds=3
%prod.quarkus.rest-client.danaya-api.polling-interval-seconds=5
%prod.quarkus.rest-client.danaya-api.max-polling-attempts=60
%prod.quarkus.rest-client.danaya-api.providers=africa.flot.infrastructure.danaya.DanayaClient

# Jetfy SMS (prod)
%prod.quarkus.jetfy.api.token=${JETFY_API_TOKEN}
%prod.quarkus.jetfy.api.sender-id=${JETFY_API_SENDER_ID}
%prod.quarkus.rest-client.jetfy-api.url=${JETFY_API_URL:https://api.jetfy.net}
%prod.quarkus.rest-client.jetfy-api.scope=jakarta.enterprise.context.ApplicationScoped

# Fineract (prod)
%prod.quarkus.fineract.api.url=${FINERACT_API_URL}
%prod.quarkus.fineract.api.username=${FINERACT_API_USERNAME}
%prod.quarkus.fineract.api.password=${FINERACT_API_PASSWORD}

# Fineract API Rest-Client (prod)
%prod.quarkus.rest-client.fineract-api.url=${FINERACT_API_URL}
%prod.quarkus.rest-client.fineract-api.username=${FINERACT_API_USERNAME}
%prod.quarkus.rest-client.fineract-api.password=${FINERACT_API_PASSWORD}
%prod.quarkus.rest-client.fineract-api.connect-timeout=30000
%prod.quarkus.rest-client.fineract-api.read-timeout=30000
%prod.quarkus.rest-client.fineract-api.max-retries=3
%prod.quarkus.rest-client.fineract-api.retry-interval=1000

# Africa Mobile API (prod)
%prod.quarkus.rest-client.africa-mobile-api.url=${AFRICA_MOBILE_API_URL}
%prod.quarkus.africa.mobile.accountid=${AFRICA_MOBILE_ACCOUNTID}
%prod.quarkus.africa.mobile.password=${AFRICA_MOBILE_PASSWORD}
%prod.quarkus.africa.mobile.sender=${AFRICA_MOBILE_SENDER}

# Version
version=${VERSION}